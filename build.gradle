plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" //
}

group = 'eci'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//local
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1' //JWT
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.querydsl:querydsl-jpa'//

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.oracle.database.jdbc:ojdbc8' //상용환경 db
	runtimeOnly 'com.h2database:h2' //테스트 db

	annotationProcessor 'org.projectlombok:lombok'

	//test 패키지 안에서 실행되는 아이들
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
	testImplementation 'org.mockito:mockito-core:3.11.2'
	testImplementation 'org.mockito:mockito-junit-jupiter:3.11.2'
	testImplementation 'org.springframework.security:spring-security-test'
//	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

//	testImplementation ('org.junit.vintage:junit-vintage-engine'){
//
//	}
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.1")
	testRuntimeOnly("org.junit.platform:junit-platform-engine:1.5.1")
	testRuntimeOnly("org.junit.platform:junit-platform-commons:1.5.1")

	testImplementation("org.junit.jupiter:junit-jupiter-api:5.5.1") {
		exclude group : 'org.hamcrest',
				module: 'hamcrest-core'
		exclude module:'junit-platform-commons'
	}


}

tasks.named('test') {
	useJUnitPlatform()
}

//test {
//	useJUnitPlatform()
//}

def querydslDir = "$buildDir/generated/querydsl" // (3)


querydsl { // (4)
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets { // (5)
	main.java.srcDir querydslDir
}

configurations { // (6)
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // (7)
	options.annotationProcessorPath = configurations.querydsl
}